{"ast":null,"code":"var _jsxFileName = \"/Users/suphachabharnigrodhananda/Desktop/4920/4920_project/src/context/GlobalState_notification.js\";\nimport React, { createContext, useState, useEffect } from 'react';\nimport moment from 'moment';\nimport cookie from 'react-cookies';\nimport './global.css';\n\nfunction onOk(value) {\n  console.log('onOk: ', value);\n}\n\nvar ITME_API = `https://be-4920.herokuapp.com/getreminder`;\nexport const loginUser = () => {\n  return cookie.load('userInfo');\n};\nexport const GlobalContext_notification = createContext(); // Provider component\n\nexport const GlobalProvider_notification = ({\n  children\n}) => {\n  const [list, setList] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = `${ITME_API}`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setList(data);\n    };\n\n    fetchData();\n  });\n\n  function getRemoval(arr1) {\n    let arr = [...arr1];\n    let newarr = [];\n    let userid = loginUser(); // console.log(\"window\", parseInt(userid))\n\n    for (const value of arr) {\n      if (value.UserID === parseInt(userid)) {\n        newarr.push(value);\n      }\n    }\n\n    return newarr;\n  } // eslint-disable-next-line react/jsx-pascal-case\n\n\n  return /*#__PURE__*/React.createElement(GlobalContext_notification.Provider, {\n    value: {\n      notifications: getRemoval(list)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/suphachabharnigrodhananda/Desktop/4920/4920_project/src/context/GlobalState_notification.js"],"names":["React","createContext","useState","useEffect","moment","cookie","onOk","value","console","log","ITME_API","loginUser","load","GlobalContext_notification","GlobalProvider_notification","children","list","setList","fetchData","url","response","fetch","data","json","getRemoval","arr1","arr","newarr","userid","UserID","parseInt","push","notifications"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAO,cAAP;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjBC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,KAAtB;AACH;;AAED,IAAIG,QAAQ,GAAI,2CAAhB;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC3B,SAAON,MAAM,CAACO,IAAP,CAAY,UAAZ,CAAP;AACH,CAFM;AAIP,OAAO,MAAMC,0BAA0B,GAAGZ,aAAa,EAAhD,C,CAEP;;AACA,OAAO,MAAMa,2BAA2B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACzD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMe,SAAS,GAAG,YAAY;AAC1B,YAAMC,GAAG,GAAI,GAAET,QAAS,EAAxB;AACA,YAAMU,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,YAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAN,MAAAA,OAAO,CAACK,IAAD,CAAP;AACH,KALD;;AAMAJ,IAAAA,SAAS;AACZ,GARQ,CAAT;;AAUA,WAASM,UAAT,CAAoBC,IAApB,EAA0B;AACtB,QAAIC,GAAG,GAAG,CAAC,GAAGD,IAAJ,CAAV;AACA,QAAIE,MAAM,GAAG,EAAb;AACA,QAAIC,MAAM,GAAGjB,SAAS,EAAtB,CAHsB,CAItB;;AACA,SAAK,MAAMJ,KAAX,IAAoBmB,GAApB,EAAyB;AACrB,UAAInB,KAAK,CAACsB,MAAN,KAAiBC,QAAQ,CAACF,MAAD,CAA7B,EAAuC;AACrCD,QAAAA,MAAM,CAACI,IAAP,CAAYxB,KAAZ;AACD;AACJ;;AACD,WAAOoB,MAAP;AACH,GAxBwD,CA0BzD;;;AACA,sBAAQ,oBAAC,0BAAD,CAA4B,QAA5B;AAAqC,IAAA,KAAK,EAAE;AAChDK,MAAAA,aAAa,EAAER,UAAU,CAACR,IAAD;AADuB,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGHD,QAHG,CAAR;AAKH,CAhCM","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport moment from 'moment';\nimport cookie from 'react-cookies';\nimport './global.css';\n\nfunction onOk(value) {\n    console.log('onOk: ', value);\n}\n\nvar ITME_API = `https://be-4920.herokuapp.com/getreminder`;\n\nexport const loginUser = () => {\n    return cookie.load('userInfo')\n};\n\nexport const GlobalContext_notification = createContext();\n\n// Provider component\nexport const GlobalProvider_notification = ({ children }) => {\n    const [list, setList] = useState([]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const url = `${ITME_API}`\n            const response = await fetch(url)\n            const data = await response.json()\n            setList(data)\n        }\n        fetchData()\n    });\n\n    function getRemoval(arr1) {\n        let arr = [...arr1];\n        let newarr = [];\n        let userid = loginUser();\n        // console.log(\"window\", parseInt(userid))\n        for (const value of arr) {\n            if (value.UserID === parseInt(userid)) {\n              newarr.push(value);\n            }\n        }\n        return newarr;\n    }\n\n    // eslint-disable-next-line react/jsx-pascal-case\n    return (<GlobalContext_notification.Provider value={{\n        notifications: getRemoval(list)\n    }}>\n        {children}\n    </GlobalContext_notification.Provider>);\n}"]},"metadata":{},"sourceType":"module"}