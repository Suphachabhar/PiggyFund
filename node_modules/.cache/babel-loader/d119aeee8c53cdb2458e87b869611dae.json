{"ast":null,"code":"var _jsxFileName = \"/Users/suphachabharnigrodhananda/Desktop/4920/4920_project/src/pages/Budget/Budget.js\";\n\n/* eslint-disable react/jsx-pascal-case */\nimport React, { Component } from 'react';\nimport { Chart } from '../../components/Budget/Chart';\nimport { BudgetList } from '../../components/Budget/BudgetList';\nimport { GlobalProvider_budget } from '../../context/GlobalState_budget';\nimport moment, { months } from 'moment';\nimport '../Tracker/Tracker.css';\nimport { notification, Drawer, Form, Col, Row, Button } from 'antd';\nimport cookie from 'react-cookies';\n\nfunction onOk(value) {\n  console.log('onOk: ', value);\n}\n\nconst close = () => {\n  console.log('Notification was closed. Either the close button was clicked or duration time elapsed.');\n};\n\nconst openNotification = () => {\n  const key = `open${Date.now()}`;\n  const btn = /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    size: \"small\",\n    onClick: () => notification.close(key),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"Confirm\");\n  notification.open({\n    message: 'Notification Title',\n    description: 'A function will be be called after the notification is closed (automatically after the \"duration\" time of manually).',\n    btn,\n    key,\n    onClose: close\n  });\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(Button, {\n  type: \"primary\",\n  onClick: openNotification,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }\n}, \"Open the notification box\"), document.getElementById('container'));\nexport const loginUser = () => {\n  let id = parseInt(cookie.load('userInfo'));\n  return id;\n};\nexport default class Budget extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      visible: false,\n      error: null,\n      isLoaded: false,\n      datas: {\n        amount: \"\",\n        category: \"\",\n        month: moment().format('MMMM')\n      }\n    };\n\n    this.showDrawer = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.onClose = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.openNotificationWithIcon = type => {\n      notification[type]({\n        message: 'Add',\n        description: 'Add new budget success.'\n      });\n    };\n\n    this.addBudget = _ => {\n      const {\n        datas\n      } = this.state;\n      let userid = loginUser();\n\n      if (datas.category.length == 0) {\n        notification['error']({\n          message: 'Add',\n          description: 'Please enter the category name.'\n        });\n      } else if (datas.amount.length == 0 || parseInt(datas.amount) <= 0) {\n        notification['error']({\n          message: 'Add',\n          description: 'Please enter a valid number for amount (>0).'\n        });\n      } else {\n        fetch(`https://be-4920.herokuapp.com/updateBudget?category=${datas.category}&amount=${datas.amount}&month=${datas.month}&userid=${userid}`).then(console.log('Add budget success')).catch(error => this.setState({\n          isLoaded: true,\n          error: error\n        }));\n        this.openNotificationWithIcon('success');\n        this.onClose();\n      }\n    };\n  }\n\n  render() {\n    const {\n      datas\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(GlobalProvider_budget, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"left_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"back-btn\",\n      onClick: this.showDrawer,\n      type: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, \"Add Budget\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"right_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(BudgetList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Drawer, {\n      title: \"Add a new budget\",\n      width: 520,\n      onClose: this.onClose,\n      visible: this.state.visible,\n      bodyStyle: {\n        paddingBottom: 80\n      },\n      footer: /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: 'right'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"additem-btn\",\n        type: \"primary\",\n        onClick: this.onClose,\n        style: {\n          marginRight: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 33\n        }\n      }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"additem-btn\",\n        onClick: () => {\n          this.addBudget();\n        },\n        type: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 33\n        }\n      }, \"Add Budget\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      layout: \"vertical\",\n      hideRequiredMark: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      gutter: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"month\",\n      label: \"Month\",\n      rules: [{\n        required: true,\n        message: 'Please choose the month'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"date-input\",\n      onChange: e => this.setState({\n        datas: { ...datas,\n          month: e.target.value\n        }\n      }),\n      onOk: onOk,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 41\n      }\n    }, months().map(month => {\n      if (month.localeCompare(datas.month) === 0 || !datas.month && moment().format('MMMM').localeCompare(month) === 0) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: month,\n          selected: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 61\n          }\n        }, month);\n      } else {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: month,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 61\n          }\n        }, month);\n      }\n    }))))), /*#__PURE__*/React.createElement(Row, {\n      gutter: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"category\",\n      label: \"Category\",\n      rules: [{\n        required: true,\n        message: 'Please enter the category'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter catagory...\",\n      value: datas.category,\n      onChange: e => this.setState({\n        datas: { ...datas,\n          category: e.target.value\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 41\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      gutter: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"amount\",\n      label: \"Amount\",\n      rules: [{\n        required: true,\n        message: 'Please enter the amount'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      placeholder: \"Enter Amount...\",\n      value: datas.amount,\n      onChange: e => this.setState({\n        datas: { ...datas,\n          amount: e.target.value\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 41\n      }\n    })))))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/suphachabharnigrodhananda/Desktop/4920/4920_project/src/pages/Budget/Budget.js"],"names":["React","Component","Chart","BudgetList","GlobalProvider_budget","moment","months","notification","Drawer","Form","Col","Row","Button","cookie","onOk","value","console","log","close","openNotification","key","Date","now","btn","open","message","description","onClose","ReactDOM","render","document","getElementById","loginUser","id","parseInt","load","Budget","state","visible","error","isLoaded","datas","amount","category","month","format","showDrawer","setState","openNotificationWithIcon","type","addBudget","_","userid","length","fetch","then","catch","paddingBottom","textAlign","marginRight","required","e","target","map","localeCompare"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-pascal-case */\nimport React, { Component } from 'react'\nimport { Chart } from '../../components/Budget/Chart';\nimport { BudgetList } from '../../components/Budget/BudgetList';\nimport { GlobalProvider_budget } from '../../context/GlobalState_budget';\nimport moment, { months } from 'moment';\n\n\nimport '../Tracker/Tracker.css'\nimport { notification, Drawer, Form, Col, Row, Button } from 'antd';\n\nimport cookie from 'react-cookies'\n\nfunction onOk(value) {\n    console.log('onOk: ', value);\n}\n\nconst close = () => {\n    console.log(\n      'Notification was closed. Either the close button was clicked or duration time elapsed.',\n    );\n  };\n  \n  const openNotification = () => {\n    const key = `open${Date.now()}`;\n    const btn = (\n      <Button type=\"primary\" size=\"small\" onClick={() => notification.close(key)}>\n        Confirm\n      </Button>\n    );\n    notification.open({\n      message: 'Notification Title',\n      description:\n        'A function will be be called after the notification is closed (automatically after the \"duration\" time of manually).',\n      btn,\n      key,\n      onClose: close,\n    });\n  };\n  \n  ReactDOM.render(\n    <Button type=\"primary\" onClick={openNotification}>\n      Open the notification box\n    </Button>,\n    document.getElementById('container'),\n  );\n\n\nexport const loginUser = () => {\n    let id = parseInt(cookie.load('userInfo'))\n    return id\n}\n\nexport default class Budget extends Component {\n    state = {\n        visible: false,\n        error: null,\n        isLoaded: false,\n        datas: {\n            amount: \"\",\n            category: \"\",\n            month: moment().format('MMMM')\n        }\n    };\n\n    showDrawer = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    onClose = () => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    openNotificationWithIcon = type => {\n        notification[type]({\n            message: 'Add',\n            description:\n                'Add new budget success.',\n        });\n    };\n\n    addBudget = _ => {\n        const { datas } = this.state;\n        let userid = loginUser();\n        if (datas.category.length == 0) {\n            notification['error']({\n                message: 'Add',\n                description:\n                    'Please enter the category name.',\n            });\n        } else if (datas.amount.length == 0 || parseInt(datas.amount) <= 0) {\n            notification['error']({\n                message: 'Add',\n                description:\n                    'Please enter a valid number for amount (>0).',\n            });\n        } else {\n            fetch(`https://be-4920.herokuapp.com/updateBudget?category=${datas.category}&amount=${datas.amount}&month=${datas.month}&userid=${userid}`)\n                .then(console.log('Add budget success'))\n                .catch(error =>\n                    this.setState({\n                        isLoaded: true,\n                        error: error\n                    })\n            );\n            this.openNotificationWithIcon('success');\n            this.onClose();\n        }\n    };\n\n    render() {\n        const { datas } = this.state;\n        return (<>\n            <GlobalProvider_budget>\n                <div className=\"container\">\n                  <div className=\"left_container\">\n                    <Chart />\n                    <button className='back-btn' onClick={this.showDrawer} type=\"primary\">Add Budget</button>\n                  </div>\n\n                  <div className=\"right_container\">\n                    <BudgetList />\n                  </div>\n                    <Drawer\n                        title=\"Add a new budget\"\n                        width={520}\n                        onClose={this.onClose}\n                        visible={this.state.visible}\n                        bodyStyle={{ paddingBottom: 80 }}\n                        footer={\n                            <div\n                                style={{\n                                    textAlign: 'right',\n                                }}\n                            >\n                                <button className='additem-btn' type=\"primary\" onClick={this.onClose} style={{ marginRight: 8 }}>Cancel</button>\n                                <button className='additem-btn' onClick={() => { this.addBudget(); }} type=\"primary\">Add Budget</button>\n                            </div>\n                        }\n                    >\n                        <Form layout=\"vertical\" hideRequiredMark>\n                            <Row gutter={16}>\n                                <Col span={24}>\n                                    <Form.Item\n                                        name=\"month\"\n                                        label=\"Month\"\n                                        rules={[{ required: true, message: 'Please choose the month' }]}\n                                    >\n                                        <select className='date-input'\n                                            onChange={e => this.setState({ datas: { ...datas, month: e.target.value } })}\n                                            onOk={onOk}\n                                        >\n                                            {months().map(month => {\n                                                if (month.localeCompare(datas.month) === 0 || (!(datas.month) && moment().format('MMMM').localeCompare(month) === 0)) {\n                                                    return (<option value={month} selected>{month}</option>)\n                                                } else {\n                                                    return (<option value={month}>{month}</option>)\n                                                }\n                                            })}\n                                        </select>\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                            <Row gutter={16}>\n                                <Col span={24}>\n                                    <Form.Item\n                                        name=\"category\"\n                                        label=\"Category\"\n                                        rules={[{ required: true, message: 'Please enter the category' }]}\n                                    >\n                                        <input\n                                            type=\"text\"\n                                            placeholder=\"Enter catagory...\"\n                                            value={datas.category}\n                                            onChange={e => this.setState({ datas: { ...datas, category: e.target.value } })}\n                                        />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                            <Row gutter={16}>\n                                <Col span={24}>\n                                    <Form.Item\n                                        name=\"amount\"\n                                        label=\"Amount\"\n                                        rules={[{ required: true, message: 'Please enter the amount' }]}\n                                    >\n                                        <input\n                                            type=\"number\"\n                                            placeholder=\"Enter Amount...\"\n                                            value={datas.amount}\n                                            onChange={e => this.setState({ datas: { ...datas, amount: e.target.value } })}\n                                        />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </Drawer>\n                </div>\n            </GlobalProvider_budget>\n        </>);\n    }\n}\n\n "]},"metadata":{},"sourceType":"module"}