{"ast":null,"code":"var _jsxFileName = \"/Users/suphachabharnigrodhananda/Desktop/4920/4920_project/src/context/GlobalState.js\";\nimport React, { createContext, useReducer, useState, useEffect } from 'react';\nimport AppReducer from './AppReducer';\nimport moment, { months } from 'moment';\nimport cookie from 'react-cookies';\nimport { Header } from '../components/Transaction/Header';\nimport './global.css';\nconst ITME_API = `https://be-4920.herokuapp.com/getall`; // Initial state\n\nconst initialState = {\n  transactions: [],\n  // all_transactions: [],\n  month: moment().format('MMMM')\n}; // Create context\n\nexport const GlobalContext = createContext(initialState);\nexport const loginUser = () => {\n  return cookie.load('userInfo');\n}; // Provider component\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n  const [list, setList] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = `${ITME_API}`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setList(data);\n      state.all_transactions = list;\n      state.transactions = list.filter(transaction => {\n        return moment(transaction.Time).format('MMMM').localeCompare(state.month) === 0;\n      }).sort(function (a, b) {\n        return moment(a.Time).diff(moment(b.Time));\n      });\n      console.log(state.all_transactions); // console.log(state.transactions.Time)\n    };\n\n    fetchData();\n  });\n\n  function getRemoval(arr1) {\n    let arr = [...arr1];\n    let newarr = [];\n    let userid = loginUser(); // console.log(\"window\", parseInt(userid))\n    // const convertToCurrency = cookie.load('currency');\n\n    const rates = cookie.load('rate'); // console.log(convertToCurrency, rates)\n\n    for (const value of arr) {\n      if (value.UserID === parseInt(userid)) {\n        let baseAmount = parseFloat(value.Amount).toFixed(2);\n        let res = parseFloat(baseAmount * rates).toFixed(2);\n        value.newAmount = res.toString();\n        newarr.push(value);\n      }\n    } // cookie.save('trackerData', newarr, { path: '/' })\n\n\n    return newarr;\n  }\n\n  function getRemovalAll(arr1) {\n    let arr = [...arr1];\n    let newarr = [];\n    let userid = loginUser();\n\n    for (const value of arr) {\n      if (value.UserID === parseInt(userid)) {\n        newarr.push(value);\n      }\n    }\n\n    cookie.save('trackerData', newarr, {\n      path: '/'\n    });\n    return newarr;\n  } // Actions\n\n\n  function deleteTransaction(id) {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id\n    });\n  }\n\n  function addTransaction(transaction) {\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: transaction\n    });\n  }\n\n  const setMonthToDisplay = function (month) {\n    state.month = month;\n  };\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      transactions: getRemoval(state.transactions),\n      all_transactions: getRemovalAll(state.all_transactions),\n      // transactions: state.transactions,\n      deleteTransaction,\n      addTransaction\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"month_display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: \"month\",\n    onChange: e => setMonthToDisplay(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, months().map(month => {\n    if (moment().format('MMMM').localeCompare(month) === 0) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: month,\n        selected: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }\n      }, month);\n    } else {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: month,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }\n      }, month);\n    }\n  }))), children);\n};","map":{"version":3,"sources":["/Users/suphachabharnigrodhananda/Desktop/4920/4920_project/src/context/GlobalState.js"],"names":["React","createContext","useReducer","useState","useEffect","AppReducer","moment","months","cookie","Header","ITME_API","initialState","transactions","month","format","GlobalContext","loginUser","load","GlobalProvider","children","state","dispatch","list","setList","fetchData","url","response","fetch","data","json","all_transactions","filter","transaction","Time","localeCompare","sort","a","b","diff","console","log","getRemoval","arr1","arr","newarr","userid","rates","value","UserID","parseInt","baseAmount","parseFloat","Amount","toFixed","res","newAmount","toString","push","getRemovalAll","save","path","deleteTransaction","id","type","payload","addTransaction","setMonthToDisplay","e","target","map"],"mappings":"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","sourcesContent":["import React, { createContext, useReducer, useState, useEffect } from 'react';\nimport AppReducer from './AppReducer';\nimport moment, { months } from 'moment';\nimport cookie from 'react-cookies'\nimport { Header } from '../components/Transaction/Header';\nimport './global.css'\n\nconst ITME_API = `https://be-4920.herokuapp.com/getall`\n\n// Initial state\nconst initialState = {\n  transactions: [],\n  // all_transactions: [],\n  month: moment().format('MMMM')\n}\n\n// Create context\nexport const GlobalContext = createContext(initialState);\n\nexport const loginUser = () => {\n  return cookie.load('userInfo')\n}\n\n\n// Provider component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n    const [list, setList] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n        const url = `${ITME_API}`;\n        const response = await fetch(url);\n        const data = await response.json();\n        setList(data);\n        state.all_transactions = list;\n        state.transactions = list.filter(transaction => { return moment(transaction.Time).format('MMMM').localeCompare(state.month) === 0; })\n            .sort(function (a, b) { return moment(a.Time).diff(moment(b.Time)); });\n      console.log(state.all_transactions)\n      // console.log(state.transactions.Time)\n    }\n    fetchData()\n  })\n\n  function getRemoval(arr1) {\n    let arr = [...arr1];\n    let newarr = [];\n    let userid = loginUser();\n    // console.log(\"window\", parseInt(userid))\n    // const convertToCurrency = cookie.load('currency');\n    const rates = cookie.load('rate');\n    // console.log(convertToCurrency, rates)\n    for (const value of arr) {\n        if (value.UserID === parseInt(userid)) {\n          let baseAmount = parseFloat(value.Amount).toFixed(2)\n          let res = parseFloat(baseAmount * rates).toFixed(2);\n          value.newAmount = res.toString()\n          newarr.push(value);\n        }\n    }\n    // cookie.save('trackerData', newarr, { path: '/' })\n    return newarr;\n  }\n\n  function getRemovalAll(arr1) {\n    let arr = [...arr1];\n    let newarr = [];\n    let userid = loginUser();\n    for (const value of arr) {\n        if (value.UserID === parseInt(userid)) {\n          newarr.push(value);\n        }\n    }\n    cookie.save('trackerData', newarr, { path: '/' })\n    return newarr;\n  }\n\n  // Actions\n  function deleteTransaction(id) {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id\n    });\n  }\n\n  function addTransaction(transaction) {\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: transaction\n    });\n  }\n\n  const setMonthToDisplay = function(month) {\n    state.month = month;\n  };\n\n\n\n  return (<GlobalContext.Provider value={{\n    transactions: getRemoval(state.transactions),\n    all_transactions: getRemovalAll(state.all_transactions),\n    // transactions: state.transactions,\n    deleteTransaction,\n    addTransaction\n  }}>\n    <Header />\n    <div className=\"month_display\">\n      <select className=\"month\"\n        onChange={e => setMonthToDisplay(e.target.value)}\n        \n      >\n        {months().map(month => {\n            if (moment().format('MMMM').localeCompare(month) === 0) {\n                return (<option value={month} selected>{month}</option>)\n            } else {\n                return (<option value={month}>{month}</option>)\n            }\n        })}\n      </select>\n    </div>\n    \n    {children}\n  </GlobalContext.Provider>);\n}"]},"metadata":{},"sourceType":"module"}