{"ast":null,"code":"var _jsxFileName = \"/Users/suphachabharnigrodhananda/Desktop/4920/4920_project/src/context/GlobalState.js\";\nimport React, { createContext, useReducer, useState, useEffect } from 'react';\nimport AppReducer from './AppReducer';\nimport moment, { months } from 'moment';\nimport cookie from 'react-cookies';\nimport { Header } from '../components/Transaction/Header';\nconst ITME_API = `https://be-4920.herokuapp.com/getall`; // Initial state\n\nconst initialState = {\n  transactions: [],\n  all_transactions: [],\n  month: moment().format('MMMM')\n}; // Create context\n\nexport const GlobalContext = createContext(initialState);\nexport const loginUser = () => {\n  return cookie.load('userInfo');\n}; // Provider component\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n  const [list, setList] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = `${ITME_API}`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setList(data);\n      state.all_transactions = list;\n      state.transactions = list.filter(transaction => {\n        return moment(transaction.Time).format('MMMM').localeCompare(state.month) === 0;\n      }).sort(function (a, b) {\n        return moment(a.Time).diff(moment(b.Time));\n      }); // console.log(state.transactions)\n      // console.log(state.transactions.Time)\n    };\n\n    fetchData();\n  });\n  const convertToCurrency = cookie.load('currency');\n  const storage = window.localStorage;\n  const rates = JSON.parse(storage.rates);\n\n  function getRemoval(arr1) {\n    let arr = [...arr1];\n    let newarr = [];\n    let userid = loginUser();\n\n    for (const value of arr) {\n      if (value.UserID === parseInt(userid)) {\n        let baseAmount = parseFloat(value.Amount).toFixed(2);\n        let res = parseFloat(baseAmount * rates[convertToCurrency]).toFixed(2);\n        value.newAmount = res.toString();\n        newarr.push(value);\n      }\n    }\n\n    let storage = window.localStorage;\n    storage.trackerData = JSON.stringify(newarr);\n    return newarr;\n  }\n\n  function getRemovalAll(arr1) {\n    let arr = [...arr1];\n    let newarr = [];\n    let userid = loginUser();\n\n    for (const value of arr) {\n      if (value.UserID === parseInt(userid)) {\n        newarr.push(value);\n      }\n    } // let storage = window.localStorage;\n    // storage.trackerData = JSON.stringify(newarr);\n\n\n    return newarr;\n  } // Actions\n\n\n  function deleteTransaction(id) {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id\n    });\n  }\n\n  function addTransaction(transaction) {\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: transaction\n    });\n  }\n\n  const setMonthToDisplay = function (month) {\n    state.month = month;\n  };\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      transactions: getRemoval(state.transactions),\n      all_transactions: getRemovalAll(state.all_transactions),\n      // transactions: state.transactions,\n      deleteTransaction,\n      addTransaction\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: e => setMonthToDisplay(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, months().map(month => {\n    if (moment().format('MMMM').localeCompare(month) === 0) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: month,\n        selected: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 23\n        }\n      }, month);\n    } else {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: month,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 23\n        }\n      }, month);\n    }\n  })), children);\n};","map":{"version":3,"sources":["/Users/suphachabharnigrodhananda/Desktop/4920/4920_project/src/context/GlobalState.js"],"names":["React","createContext","useReducer","useState","useEffect","AppReducer","moment","months","cookie","Header","ITME_API","initialState","transactions","all_transactions","month","format","GlobalContext","loginUser","load","GlobalProvider","children","state","dispatch","list","setList","fetchData","url","response","fetch","data","json","filter","transaction","Time","localeCompare","sort","a","b","diff","convertToCurrency","storage","window","localStorage","rates","JSON","parse","getRemoval","arr1","arr","newarr","userid","value","UserID","parseInt","baseAmount","parseFloat","Amount","toFixed","res","newAmount","toString","push","trackerData","stringify","getRemovalAll","deleteTransaction","id","type","payload","addTransaction","setMonthToDisplay","e","target","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,QAA3C,EAAqDC,SAArD,QAAsE,OAAtE;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,IAAiBC,MAAjB,QAA+B,QAA/B;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,SAASC,MAAT,QAAuB,kCAAvB;AAEA,MAAMC,QAAQ,GAAI,sCAAlB,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,EADK;AAEnBC,EAAAA,gBAAgB,EAAE,EAFC;AAGnBC,EAAAA,KAAK,EAAER,MAAM,GAAGS,MAAT,CAAgB,MAAhB;AAHY,CAArB,C,CAMA;;AACA,OAAO,MAAMC,aAAa,GAAGf,aAAa,CAACU,YAAD,CAAnC;AAEP,OAAO,MAAMM,SAAS,GAAG,MAAM;AAC7B,SAAOT,MAAM,CAACU,IAAP,CAAY,UAAZ,CAAP;AACD,CAFM,C,CAKP;;AACA,OAAO,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC9C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBpB,UAAU,CAACG,UAAD,EAAaM,YAAb,CAApC;AACE,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBrB,QAAQ,CAAC,EAAD,CAAhC;AAEFC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqB,SAAS,GAAG,YAAY;AAC1B,YAAMC,GAAG,GAAI,GAAEhB,QAAS,EAAxB;AACA,YAAMiB,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,YAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAN,MAAAA,OAAO,CAACK,IAAD,CAAP;AACAR,MAAAA,KAAK,CAACR,gBAAN,GAAyBU,IAAzB;AACAF,MAAAA,KAAK,CAACT,YAAN,GAAqBW,IAAI,CAACQ,MAAL,CAAYC,WAAW,IAAI;AAAE,eAAO1B,MAAM,CAAC0B,WAAW,CAACC,IAAb,CAAN,CAAyBlB,MAAzB,CAAgC,MAAhC,EAAwCmB,aAAxC,CAAsDb,KAAK,CAACP,KAA5D,MAAuE,CAA9E;AAAkF,OAA/G,EAChBqB,IADgB,CACX,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAAE,eAAO/B,MAAM,CAAC8B,CAAC,CAACH,IAAH,CAAN,CAAeK,IAAf,CAAoBhC,MAAM,CAAC+B,CAAC,CAACJ,IAAH,CAA1B,CAAP;AAA6C,OADpD,CAArB,CAN0B,CAQ5B;AACA;AACD,KAVD;;AAWAR,IAAAA,SAAS;AACV,GAbQ,CAAT;AAeA,QAAMc,iBAAiB,GAAG/B,MAAM,CAACU,IAAP,CAAY,UAAZ,CAA1B;AACA,QAAMsB,OAAO,GAAGC,MAAM,CAACC,YAAvB;AACA,QAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWL,OAAO,CAACG,KAAnB,CAAd;;AAEA,WAASG,UAAT,CAAoBC,IAApB,EAA0B;AACxB,QAAIC,GAAG,GAAG,CAAC,GAAGD,IAAJ,CAAV;AACA,QAAIE,MAAM,GAAG,EAAb;AACA,QAAIC,MAAM,GAAGjC,SAAS,EAAtB;;AAEA,SAAK,MAAMkC,KAAX,IAAoBH,GAApB,EAAyB;AACrB,UAAIG,KAAK,CAACC,MAAN,KAAiBC,QAAQ,CAACH,MAAD,CAA7B,EAAuC;AACrC,YAAII,UAAU,GAAGC,UAAU,CAACJ,KAAK,CAACK,MAAP,CAAV,CAAyBC,OAAzB,CAAiC,CAAjC,CAAjB;AACA,YAAIC,GAAG,GAAGH,UAAU,CAACD,UAAU,GAAGX,KAAK,CAACJ,iBAAD,CAAnB,CAAV,CAAkDkB,OAAlD,CAA0D,CAA1D,CAAV;AACAN,QAAAA,KAAK,CAACQ,SAAN,GAAkBD,GAAG,CAACE,QAAJ,EAAlB;AACAX,QAAAA,MAAM,CAACY,IAAP,CAAYV,KAAZ;AACD;AACJ;;AAED,QAAIX,OAAO,GAAGC,MAAM,CAACC,YAArB;AACAF,IAAAA,OAAO,CAACsB,WAAR,GAAsBlB,IAAI,CAACmB,SAAL,CAAed,MAAf,CAAtB;AACA,WAAOA,MAAP;AACD;;AAED,WAASe,aAAT,CAAuBjB,IAAvB,EAA6B;AAC3B,QAAIC,GAAG,GAAG,CAAC,GAAGD,IAAJ,CAAV;AACA,QAAIE,MAAM,GAAG,EAAb;AACA,QAAIC,MAAM,GAAGjC,SAAS,EAAtB;;AACA,SAAK,MAAMkC,KAAX,IAAoBH,GAApB,EAAyB;AACrB,UAAIG,KAAK,CAACC,MAAN,KAAiBC,QAAQ,CAACH,MAAD,CAA7B,EAAuC;AACrCD,QAAAA,MAAM,CAACY,IAAP,CAAYV,KAAZ;AACD;AACJ,KAR0B,CAS3B;AACA;;;AAEA,WAAOF,MAAP;AACD,GAvD6C,CAyD9C;;;AACA,WAASgB,iBAAT,CAA2BC,EAA3B,EAA+B;AAC7B5C,IAAAA,QAAQ,CAAC;AACP6C,MAAAA,IAAI,EAAE,oBADC;AAEPC,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID;;AAED,WAASG,cAAT,CAAwBrC,WAAxB,EAAqC;AACnCV,IAAAA,QAAQ,CAAC;AACP6C,MAAAA,IAAI,EAAE,iBADC;AAEPC,MAAAA,OAAO,EAAEpC;AAFF,KAAD,CAAR;AAID;;AAED,QAAMsC,iBAAiB,GAAG,UAASxD,KAAT,EAAgB;AACxCO,IAAAA,KAAK,CAACP,KAAN,GAAcA,KAAd;AACD,GAFD;;AAKA,sBAAQ,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AACrCF,MAAAA,YAAY,EAAEkC,UAAU,CAACzB,KAAK,CAACT,YAAP,CADa;AAErCC,MAAAA,gBAAgB,EAAEmD,aAAa,CAAC3C,KAAK,CAACR,gBAAP,CAFM;AAGrC;AACAoD,MAAAA,iBAJqC;AAKrCI,MAAAA;AALqC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAON,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPM,eASN;AACE,IAAA,QAAQ,EAAEE,CAAC,IAAID,iBAAiB,CAACC,CAAC,CAACC,MAAF,CAASrB,KAAV,CADlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGG5C,MAAM,GAAGkE,GAAT,CAAa3D,KAAK,IAAI;AACnB,QAAIR,MAAM,GAAGS,MAAT,CAAgB,MAAhB,EAAwBmB,aAAxB,CAAsCpB,KAAtC,MAAiD,CAArD,EAAwD;AACpD,0BAAQ;AAAQ,QAAA,KAAK,EAAEA,KAAf;AAAsB,QAAA,QAAQ,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgCA,KAAhC,CAAR;AACH,KAFD,MAEO;AACH,0BAAQ;AAAQ,QAAA,KAAK,EAAEA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuBA,KAAvB,CAAR;AACH;AACJ,GANA,CAHH,CATM,EAsBLM,QAtBK,CAAR;AAwBD,CArGM","sourcesContent":["import React, { createContext, useReducer, useState, useEffect } from 'react';\nimport AppReducer from './AppReducer';\nimport moment, { months } from 'moment';\nimport cookie from 'react-cookies'\nimport { Header } from '../components/Transaction/Header';\n\nconst ITME_API = `https://be-4920.herokuapp.com/getall`\n\n// Initial state\nconst initialState = {\n  transactions: [],\n  all_transactions: [],\n  month: moment().format('MMMM')\n}\n\n// Create context\nexport const GlobalContext = createContext(initialState);\n\nexport const loginUser = () => {\n  return cookie.load('userInfo')\n}\n\n\n// Provider component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n    const [list, setList] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n        const url = `${ITME_API}`;\n        const response = await fetch(url);\n        const data = await response.json();\n        setList(data);\n        state.all_transactions = list;\n        state.transactions = list.filter(transaction => { return moment(transaction.Time).format('MMMM').localeCompare(state.month) === 0; })\n            .sort(function (a, b) { return moment(a.Time).diff(moment(b.Time)); });\n      // console.log(state.transactions)\n      // console.log(state.transactions.Time)\n    }\n    fetchData()\n  })\n\n  const convertToCurrency = cookie.load('currency');\n  const storage = window.localStorage;\n  const rates = JSON.parse(storage.rates);\n\n  function getRemoval(arr1) {\n    let arr = [...arr1];\n    let newarr = [];\n    let userid = loginUser();\n\n    for (const value of arr) {\n        if (value.UserID === parseInt(userid)) {\n          let baseAmount = parseFloat(value.Amount).toFixed(2)\n          let res = parseFloat(baseAmount * rates[convertToCurrency]).toFixed(2);\n          value.newAmount = res.toString()\n          newarr.push(value);\n        }\n    }\n\n    let storage = window.localStorage;\n    storage.trackerData = JSON.stringify(newarr);\n    return newarr;\n  }\n\n  function getRemovalAll(arr1) {\n    let arr = [...arr1];\n    let newarr = [];\n    let userid = loginUser();\n    for (const value of arr) {\n        if (value.UserID === parseInt(userid)) {\n          newarr.push(value);\n        }\n    }\n    // let storage = window.localStorage;\n    // storage.trackerData = JSON.stringify(newarr);\n\n    return newarr;\n  }\n\n  // Actions\n  function deleteTransaction(id) {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id\n    });\n  }\n\n  function addTransaction(transaction) {\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: transaction\n    });\n  }\n\n  const setMonthToDisplay = function(month) {\n    state.month = month;\n  };\n  \n\n  return (<GlobalContext.Provider value={{\n    transactions: getRemoval(state.transactions),\n    all_transactions: getRemovalAll(state.all_transactions),\n    // transactions: state.transactions,\n    deleteTransaction,\n    addTransaction\n  }}>\n    <Header />\n  \n    <select\n      onChange={e => setMonthToDisplay(e.target.value)}\n    >\n      {months().map(month => {\n          if (moment().format('MMMM').localeCompare(month) === 0) {\n              return (<option value={month} selected>{month}</option>)\n          } else {\n              return (<option value={month}>{month}</option>)\n          }\n      })}\n    </select>\n\n    \n    {children}\n  </GlobalContext.Provider>);\n}"]},"metadata":{},"sourceType":"module"}