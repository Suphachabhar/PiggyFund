{"ast":null,"code":"var _jsxFileName = \"/Users/suphachabharnigrodhananda/Desktop/4920/4920_project/src/context/GlobalState_budget.js\";\nimport React, { createContext, useReducer, useState, useEffect } from 'react';\nimport AppReducer from './AppReducer_budget';\nimport moment, { months } from 'moment';\nimport { Header } from '../components/Budget/Header';\nimport cookie from 'react-cookies';\nimport './global.css';\n\nfunction onOk(value) {\n  console.log('onOk: ', value);\n}\n\nvar ITME_API = `https://be-4920.herokuapp.com/getallbudget`; // Initial state\n\nconst initialState = {\n  budgets: [],\n  month: moment().format('MMMM')\n}; // Create context\n\nexport const GlobalContext_budget = createContext(initialState);\nexport const loginUser = () => {\n  return cookie.load('userInfo');\n}; // Provider component\n\nexport const GlobalProvider_budget = ({\n  children\n}) => {\n  const [state] = useReducer(AppReducer, initialState);\n  const [list, setList] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = `${ITME_API}`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setList(data);\n      state.budgets = list.filter(budget => {\n        return budget.Month.localeCompare(state.month) === 0;\n      });\n    };\n\n    fetchData();\n  });\n\n  function getRemoval(arr1) {\n    let arr = [...arr1];\n    let newarr = [];\n    let userid = loginUser();\n\n    for (const value of arr) {\n      if (value.UserID === parseInt(userid)) {\n        newarr.push(value);\n      }\n    }\n\n    return newarr;\n  } // Actions\n\n\n  const setMonthToDisplay = function (month) {\n    state.month = month;\n  }; // eslint-disable-next-line react/jsx-pascal-case\n\n\n  return /*#__PURE__*/React.createElement(GlobalContext_budget.Provider, {\n    value: {\n      budgets: getRemoval(state.budgets)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"month_display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: \"month\",\n    onChange: e => setMonthToDisplay(e.target.value),\n    onOk: onOk,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, months().map(month => {\n    if (moment().format('MMMM').localeCompare(month) === 0) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: month,\n        selected: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }\n      }, month);\n    } else {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: month,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }\n      }, month);\n    }\n  }))), children);\n};","map":{"version":3,"sources":["/Users/suphachabharnigrodhananda/Desktop/4920/4920_project/src/context/GlobalState_budget.js"],"names":["React","createContext","useReducer","useState","useEffect","AppReducer","moment","months","Header","cookie","onOk","value","console","log","ITME_API","initialState","budgets","month","format","GlobalContext_budget","loginUser","load","GlobalProvider_budget","children","state","list","setList","fetchData","url","response","fetch","data","json","filter","budget","Month","localeCompare","getRemoval","arr1","arr","newarr","userid","UserID","parseInt","push","setMonthToDisplay","e","target","map"],"mappings":"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","sourcesContent":["import React, { createContext, useReducer, useState, useEffect } from 'react';\nimport AppReducer from './AppReducer_budget';\nimport moment, { months } from 'moment';\nimport { Header } from '../components/Budget/Header';\nimport cookie from 'react-cookies'\nimport './global.css'\n\nfunction onOk(value) {\n    console.log('onOk: ', value);\n}\n\nvar ITME_API = `https://be-4920.herokuapp.com/getallbudget`\n\n// Initial state\nconst initialState = {\n    budgets: [],\n    month: moment().format('MMMM')\n}\n\n// Create context\nexport const GlobalContext_budget = createContext(initialState);\n\nexport const loginUser = () => {\n    return cookie.load('userInfo')\n}\n\n// Provider component\nexport const GlobalProvider_budget = ({ children }) => {\n    const [state] = useReducer(AppReducer, initialState);\n    const [list, setList] = useState([]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const url = `${ITME_API}`\n            const response = await fetch(url)\n            const data = await response.json()\n            setList(data)\n            state.budgets = list.filter(budget => { return budget.Month.localeCompare(state.month) === 0; })\n        }\n        fetchData()\n    });\n\n    function getRemoval(arr1) {\n        let arr = [...arr1];\n        let newarr = [];\n        let userid = loginUser();\n        for (const value of arr) {\n            if (value.UserID === parseInt(userid)) {\n              newarr.push(value);\n            }\n        }\n        return newarr;\n    }\n\n  // Actions\n    const setMonthToDisplay = function(month) {\n        state.month = month;\n    };\n\n    // eslint-disable-next-line react/jsx-pascal-case\n    return (<GlobalContext_budget.Provider value={{\n        budgets: getRemoval(state.budgets)\n    }}>\n        <Header />\n        <div className=\"month_display\">\n        <select className=\"month\"\n            onChange={e => setMonthToDisplay(e.target.value)}\n            onOk={onOk}\n        >\n            {months().map(month => {\n                if (moment().format('MMMM').localeCompare(month) === 0) {\n                    return (<option value={month} selected>{month}</option>)\n                } else {\n                    return (<option value={month}>{month}</option>)\n                }\n            })}\n        </select>\n        </div>\n        \n        {children}\n    </GlobalContext_budget.Provider>);\n}"]},"metadata":{},"sourceType":"module"}