{"ast":null,"code":"var _jsxFileName = \"/Users/suphachabharnigrodhananda/Desktop/4920/4920_project/src/pages/Account/Account.js\";\nimport React, { Component } from 'react';\nimport cookie from 'react-cookies';\nimport { notification, Drawer, Form, Col, Row, DatePicker } from 'antd';\nimport moment from 'moment';\nimport './account.css';\nexport const loginUser = () => {\n  let id = parseInt(cookie.load('userInfo'));\n  return id;\n};\n\nfunction onOk(value) {\n  console.log('onOk: ', value);\n}\n\nexport default class Account extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rates: [],\n      currencies: [],\n      baseCurrency: 'AUD',\n      visible: false,\n      error: null,\n      isLoaded: false,\n      datas: {\n        date: \"\",\n        message: \"\"\n      }\n    };\n\n    this.callAPI = async base => {\n      try {\n        let res = await fetch(`https://api.exchangeratesapi.io/latest?base=${base}`);\n        let data = await res.json();\n        let rate = data['rates'];\n        let sort_curr = Object.keys(data['rates']).sort();\n        this.setState({\n          rates: rate,\n          currencies: sort_curr\n        });\n\n        if (cookie.load('currency') == null) {\n          cookie.save('currency', 'AUD', {\n            path: '/'\n          });\n          cookie.save('rate', rate['AUD'], {\n            path: '/'\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.changeBaseCurrency = e => {\n      const {\n        rates\n      } = this.state;\n      this.setState({\n        baseCurrency: e.target.value\n      });\n      cookie.save('currency', e.target.value, {\n        path: '/'\n      });\n      cookie.save('rate', rates[e.target.value], {\n        path: '/'\n      });\n    };\n\n    this.showDrawer = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.onClose = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.openNotificationWithIcon = type => {\n      notification[type]({\n        message: 'Add',\n        description: 'Add new notification success.'\n      });\n    };\n\n    this.addNotification = _ => {\n      const {\n        datas\n      } = this.state;\n      let userid = loginUser();\n\n      if (datas.message.length === 0) {\n        notification['error']({\n          message: 'Add',\n          description: 'Please enter the message.'\n        });\n      } else if (datas.date.length === 0 || moment(datas.date).diff(moment().startOf('day'), \"days\") <= 0) {\n        notification['error']({\n          message: 'Add',\n          description: 'Please enter a valid date (after today).'\n        });\n      } else {\n        fetch(`https://be-4920.herokuapp.com/addreminder?message=${datas.message}&time=${datas.date}&userid=${userid}`).then(console.log('Add item success')).catch(error => this.setState({\n          isLoaded: true,\n          error: error\n        }));\n        this.openNotificationWithIcon('success');\n        this.onClose();\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.callAPI('AUD');\n  }\n\n  render() {\n    const {\n      currencies,\n      datas\n    } = this.state;\n    const currencyChoice = currencies.map(currency => /*#__PURE__*/React.createElement(\"option\", {\n      key: currency,\n      value: currency,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }\n    }, \" \", currency, \" \"));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"currency-font\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, \"Currency:\", /*#__PURE__*/React.createElement(\"select\", {\n      className: \"currency-select\",\n      value: cookie.load('currency'),\n      onChange: this.changeBaseCurrency,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, currencyChoice, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, cookie.load('currency')))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"back-btn\",\n      onClick: this.showDrawer,\n      type: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, \"Add Notification\"), /*#__PURE__*/React.createElement(Drawer, {\n      title: \"Add a new notification\",\n      width: 520,\n      onClose: this.onClose,\n      visible: this.state.visible,\n      bodyStyle: {\n        paddingBottom: 80\n      },\n      footer: /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: 'right'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"additem-btn\",\n        type: \"primary\",\n        onClick: this.onClose,\n        style: {\n          marginRight: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }\n      }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"additem-btn\",\n        onClick: () => {\n          this.addNotification();\n        },\n        type: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }\n      }, \"Add Message\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      layout: \"vertical\",\n      hideRequiredMark: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      gutter: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"dateTime\",\n      label: \"Date\",\n      rules: [{\n        required: true,\n        message: 'Please choose the dateTime'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      className: \"date-input\",\n      size: \"large\",\n      style: {\n        width: '100%'\n      },\n      onChange: e => {\n        if (e) {\n          this.state.datas.date = e.toISOString();\n        }\n      },\n      onOk: onOk,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 33\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      gutter: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"message\",\n      label: \"Message\",\n      rules: [{\n        required: true,\n        message: 'Please enter the message'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter message...\",\n      value: this.state.datas.message,\n      onChange: e => this.setState({\n        datas: { ...datas,\n          message: e.target.value\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 33\n      }\n    })))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/suphachabharnigrodhananda/Desktop/4920/4920_project/src/pages/Account/Account.js"],"names":["React","Component","cookie","notification","Drawer","Form","Col","Row","DatePicker","moment","loginUser","id","parseInt","load","onOk","value","console","log","Account","state","rates","currencies","baseCurrency","visible","error","isLoaded","datas","date","message","callAPI","base","res","fetch","data","json","rate","sort_curr","Object","keys","sort","setState","save","path","err","changeBaseCurrency","e","target","showDrawer","onClose","openNotificationWithIcon","type","description","addNotification","_","userid","length","diff","startOf","then","catch","componentDidMount","render","currencyChoice","map","currency","paddingBottom","textAlign","marginRight","required","width","toISOString"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport cookie from 'react-cookies';\nimport { notification, Drawer, Form, Col, Row, DatePicker } from 'antd';\nimport moment from 'moment';\n\nimport './account.css'\n\nexport const loginUser = () => {\n    let id = parseInt(cookie.load('userInfo'))\n    return id\n};\n\nfunction onOk(value) {\n    console.log('onOk: ', value);\n}\n\nexport default class Account extends Component {\n  state = {\n    rates: [],\n    currencies: [],\n    baseCurrency: 'AUD',\n    visible: false,\n    error: null,\n    isLoaded: false,\n    datas: {\n        date: \"\",\n        message: \"\"\n    }\n  };\n\n  componentDidMount() {\n    this.callAPI('AUD')\n  };\n\n  callAPI = async(base) => {\n    try {\n      let res = await fetch(`https://api.exchangeratesapi.io/latest?base=${base}`);\n      let data = await res.json();\n      let rate = data['rates']\n      let sort_curr = Object.keys(data['rates']).sort()\n      this.setState({\n        rates: rate,\n        currencies: sort_curr\n      })\n\n      if (cookie.load('currency') == null) {\n        cookie.save('currency', 'AUD', { path: '/' })\n        cookie.save('rate', rate['AUD'], { path: '/' })\n      }\n\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  changeBaseCurrency = (e) => {\n    const { rates } = this.state;\n    this.setState({ baseCurrency: e.target.value});\n    cookie.save('currency', e.target.value, { path: '/' })\n    cookie.save('rate', rates[e.target.value], { path: '/' })\n  };\n\n  showDrawer = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  onClose = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  openNotificationWithIcon = type => {\n    notification[type]({\n      message: 'Add',\n      description:\n        'Add new notification success.',\n    });\n  };\n\n  addNotification = _ => {\n    const { datas } = this.state;\n      let userid = loginUser();\n      if (datas.message.length === 0) {\n          notification['error']({\n              message: 'Add',\n              description:\n                  'Please enter the message.',\n          });\n      } else if (datas.date.length === 0 || moment(datas.date).diff(moment().startOf('day'), \"days\") <= 0) {\n          notification['error']({\n              message: 'Add',\n              description:\n                  'Please enter a valid date (after today).',\n          });\n      } else {\n          fetch(`https://be-4920.herokuapp.com/addreminder?message=${datas.message}&time=${datas.date}&userid=${userid}`)\n              .then(console.log('Add item success'))\n              .catch(error =>\n                  this.setState({\n                      isLoaded: true,\n                      error: error\n                  })\n          );\n          this.openNotificationWithIcon('success');\n          this.onClose();\n      }\n  }\n\n  render() {\n    const { currencies, datas } = this.state;\n\n    const currencyChoice = currencies.map(currency =>\n      <option key={currency} value={currency}> {currency} </option>      \n    );\n    return (\n      <div>\n        <label className=\"currency-font\">\n          Currency: \n          <select \n            className=\"currency-select\" \n            value={cookie.load('currency')} \n            onChange={this.changeBaseCurrency}\n          >\n            {currencyChoice}\n            <option>{cookie.load('currency')}</option>\n          </select>\n        </label>\n        <button className='back-btn' onClick={this.showDrawer} type=\"primary\">Add Notification</button>\n\n            <Drawer\n                title=\"Add a new notification\"\n                width={520}\n                onClose={this.onClose}\n                visible={this.state.visible}\n                bodyStyle={{ paddingBottom: 80 }}\n                footer={\n                    <div\n                        style={{\n                            textAlign: 'right',\n                        }}\n                    >\n                        <button className='additem-btn' type=\"primary\" onClick={this.onClose} style={{ marginRight: 8 }}>Cancel</button>\n                        <button className='additem-btn' onClick={() => { this.addNotification(); }} type=\"primary\">Add Message</button>\n                    </div>\n                }\n            >\n                <Form layout=\"vertical\" hideRequiredMark>\n                    <Row gutter={16}>\n                        <Col span={24}>\n                            <Form.Item\n                                name=\"dateTime\"\n                                label=\"Date\"\n                                rules={[{ required: true, message: 'Please choose the dateTime' }]}\n                            >\n                                <DatePicker className='date-input'\n                                    size=\"large\"\n                                    style={{ width: '100%' }}\n                                    onChange={e => { if (e) { this.state.datas.date = e.toISOString(); } }}\n                                    onOk={onOk}\n                                />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={16}>\n                        <Col span={24}>\n                            <Form.Item\n                                name=\"message\"\n                                label=\"Message\"\n                                rules={[{ required: true, message: 'Please enter the message' }]}\n                            >\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Enter message...\"\n                                    value={this.state.datas.message}\n                                    onChange={e => this.setState({ datas: { ...datas, message: e.target.value } })}\n                                />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                </Form>\n            </Drawer>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}